{"version":3,"sources":["api/api.js","components/TableHead.js","components/dayCahngersDeparture.js","components/departure.js","components/dayChangersArrival.js","components/arrival.js","components/searchField.js","components/DeparturesDetails.js","components/ArrivalsDetails.js","App.js","index.js"],"names":["date","Date","today","getDate","getMonth","getFullYear","airlines","a","fetch","getAirlines","json","TableHead","className","DayChangersDeparture","activeDay","yesterday","tomorrow","to","activeClassName","onClick","localtime","time","toLocaleTimeString","Departure","departure","props","setItemForDetails","map","item","index","key","ID","term","timeToStand","status","timeDepExpectCalc","airline","en","name","fltNo","exact","DayChangersArrival","Arrival","arrival","timeLandFact","toTimeString","slice","SearchField","filterForCities","buttonFromFilter","action","Input","placeholder","onChange","e","target","value","type","DeparturesDetails","logo","number","terminal","planeNo","planeType","arrivalTime","Button","alt","src","ArrivalsDetails","from","App","airlinesScadule","scadule","setState","setRightTime","body","arr","arr2","arr1","toLocaleString","i","length","toLocaleDateString","setDate","day","prevSate","arrivalToShow","filter","departureToShow","prevState","details","arrivalToShowFromFilter","toLowerCase","includes","departureToShowFromFilter","state","this","path","logoName","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c3347d34.chunk.js","sourcesContent":["const date = new Date();\nconst today = `${date.getDate()}-${(date.getMonth()\n  + 1)}-${date.getFullYear()}`;\n\nexport const airlines = async() => {\n  const getAirlines = await fetch(`https://api.iev.aero/api/flights/${today}`);\n\n  return getAirlines.json();\n};\n","import React from 'react';\nimport '../index.css';\n\nfunction TableHead() {\n  return (\n    <thead>\n      <tr>\n        <th className=\"tableHead\">Terminal</th>\n        <th className=\"tableHead\">Local time</th>\n        <th className=\"tableHead\">Destination</th>\n        <th className=\"tableHead\">Status</th>\n        <th className=\"tableHead\">Airline</th>\n        <th className=\"tableHead\">Flight</th>\n        <th className=\"tableHead\" />\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHead;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../index.css';\n\nfunction DayChangersDeparture({\n  activeDay, yesterday, today, tomorrow,\n}) {\n  const date = new Date();\n\n  return (\n    <div className=\"dateContainer\">\n      <NavLink\n        to={`/departures/${yesterday()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('YESTERDAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() - 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">YESTERDAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/departures/${today()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TODAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate()}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TODAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/departures/${tomorrow()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TOMORROW')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() + 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TOMORROW</div>\n      </NavLink>\n    </div>\n  );\n}\n\nexport default DayChangersDeparture;\n","import React from 'react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\nimport TableHead from './TableHead';\nimport DayChangersDeparture from './dayCahngersDeparture';\n\nconst localtime = (time) => {\n  const numbers = new Date(time).toLocaleTimeString('uk-UA');\n\n  return numbers;\n};\n\nconst Departure = ({\n  departure, activeDay, yesterday, today, tomorrow, props, setItemForDetails,\n}) => {\n  const status = (item) => {\n    if (item.status === 'DP') {\n      return `Departed at ${localtime(item.timeDepExpectCalc)}`;\n    }\n\n    switch (item.status) {\n      case 'CX':\n        return 'Cancelled';\n      case 'CK':\n        return 'Check-in';\n      case 'ON':\n        return 'On time';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <>\n      <DayChangersDeparture\n        activeDay={activeDay}\n        yesterday={yesterday}\n        today={today}\n        tomorrow={tomorrow}\n        props={props}\n      />\n      <table>\n        <TableHead />\n        <tbody>\n          {departure.map((item, index) => (\n            <>\n              <tr\n                key={item.ID}\n                className={index % 2 === 0 ? 'row oddRow' : 'row'}\n              >\n                <td className=\"cell terminal\">\n                  <span\n                    className={\n                      item.term === 'A'\n                        ? 'terminalA'\n                        : 'terminalD'\n                    }\n                  >\n                    {item.term}\n                  </span>\n                </td>\n                <td className=\"cell\">{localtime(item.timeToStand)}</td>\n                <td className=\"cell\">{item['airportToID.city_en']}</td>\n                <td className=\"cell\">{status(item)}</td>\n                <td className=\"cell\">{item.airline.en.name}</td>\n                <td className=\"cell\">{item['carrierID.IATA'] + item.fltNo}</td>\n                <td className=\"cell lasetCell\">\n                  <NavLink\n                    to=\"/departuresDetails\"\n                    exact\n                    onClick={() => setItemForDetails([item])}\n                  >\n                    Flight details\n                  </NavLink>\n                </td>\n              </tr>\n            </>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Departure;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../index.css';\n\nfunction DayChangersArrival({\n  activeDay, yesterday, today, tomorrow,\n}) {\n  const date = new Date();\n\n  return (\n    <div className=\"dateContainer\">\n      <NavLink\n        to={`/arrivals/${yesterday()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('YESTERDAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() - 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">YESTERDAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/arrivals/${today()}`}\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TODAY')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate()}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TODAY</div>\n      </NavLink>\n\n      <NavLink\n        to={`/arrivals/${tomorrow()}`}\n        exact\n        className=\"dateDayContainer\"\n        activeClassName=\"activeDate\"\n        onClick={() => activeDay('TOMORROW')}\n      >\n        <div className=\"dateDay\">\n          {`${date.getDate() + 1}/${(date.getMonth() + 1)}`}\n        </div>\n        <div className=\"dateText\">TOMORROW</div>\n      </NavLink>\n    </div>\n  );\n}\n\nexport default DayChangersArrival;\n","import React from 'react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\nimport TableHead from './TableHead';\nimport DayChangersArrival from './dayChangersArrival';\n\nconst localtime = (time) => {\n  const numbers = new Date(time).toLocaleTimeString('uk-UA');\n\n  return numbers;\n};\n\nconst Arrival = ({\n  arrival, activeDay, yesterday, today, tomorrow, props, setItemForDetails,\n}) => {\n  const status = (item) => {\n    if (item.status === 'LN') {\n      return `Landed ${localtime(item.timeLandFact)}`;\n    }\n\n    switch (item.status) {\n      case 'CX':\n        return 'Cancelled';\n      case 'FR':\n        return 'In flight';\n      case 'ON':\n        return 'On time';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <>\n      <DayChangersArrival\n        activeDay={activeDay}\n        yesterday={yesterday}\n        today={today}\n        tomorrow={tomorrow}\n        props={props}\n      />\n      <table>\n        <TableHead />\n\n        <tbody>\n          {arrival.map((item, index) => (\n            <>\n              <tr\n                key={item.ID}\n                className={index % 2 === 0 ? 'row oddRow' : 'row'}\n              >\n                <td className=\"cell terminal\">\n                  <span\n                    className={\n                      item.term === 'A'\n                        ? 'terminalA'\n                        : 'terminalD'\n                    }\n                  >\n                    {item.term}\n                  </span>\n                </td>\n                <td className=\"cell\">\n                  {new Date(`${item.timeToStand} UTC`).toTimeString().slice(0, 8)}\n                </td>\n                <td className=\"cell\">{item['airportFromID.city_en']}</td>\n                <td className=\"cell\">{status(item)}</td>\n                <td className=\"cell\">{item.airline.en.name}</td>\n                <td className=\"cell\">{item['carrierID.IATA'] + item.fltNo}</td>\n                <td className=\"cell lasetCell\">\n                  <NavLink\n                    to=\"/arrivalsDetails\"\n                    exact\n                    onClick={() => setItemForDetails([item])}\n                  >\n                    Flight details\n                  </NavLink>\n                </td>\n              </tr>\n\n            </>\n          ))}\n        </tbody>\n\n      </table>\n    </>\n  );\n};\n\nexport default Arrival;\n","import React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport '../index.css';\n\nfunction SearchField({ filterForCities, buttonFromFilter }) {\n  return (\n    <form className=\"search\" action=\"\">\n      <Input\n        className=\"searchInput\"\n        placeholder=\"Set name of the city\"\n        onChange={e => filterForCities(e.target.value)}\n      />\n      <button\n        type=\"button\"\n        className=\"searchButton\"\n        onClick={() => buttonFromFilter()}\n      >\n        SEARCH\n      </button>\n    </form>\n  );\n}\n\nexport default SearchField;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction DeparturesDetails({\n  logo, number, to, terminal, planeNo, planeType, arrivalTime\n}) {\n  return (\n    <>\n      <NavLink to=\"/\" exact>\n        <Button type=\"button\">HOME!</Button>\n      </NavLink>\n      <img alt=\"logo\" src={logo} />\n      <p>\n        {`Number of flight: ${number}`}\n      </p>\n      <p>\n        {`Flight from: ${to}`}\n      </p>\n      <p>\n        {`Terminal: ${terminal}`}\n      </p>\n      <p>\n        {`Number of plane: ${planeNo}`}\n      </p>\n      <p>\n        {`Type of plane: ${planeType}`}\n      </p>\n      <p>\n        {`Arrival time: ${arrivalTime}`}\n      </p>\n    </>\n  );\n}\n\nexport default DeparturesDetails;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport '../index.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction ArrivalsDetails({\n  logo, number, from, terminal, planeNo, planeType, arrivalTime\n}) {\n  return (\n    <>\n      <NavLink to=\"/\" exact>\n        <Button type=\"button\">HOME!</Button>\n      </NavLink>\n      <img alt=\"logo\" src={logo} />\n      <p>\n        {`Number of flight: ${number}`}\n      </p>\n      <p>\n        {`Flight from: ${from}`}\n      </p>\n      <p>\n        {`Terminal: ${terminal}`}\n      </p>\n      <p>\n        {`Number of plane: ${planeNo}`}\n      </p>\n      <p>\n        {`Type of plane: ${planeType}`}\n      </p>\n      <p>\n        {`Arrival time: ${arrivalTime}`}\n      </p>\n    </>\n  );\n}\n\nexport default ArrivalsDetails;\n","import React from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './index.css';\nimport { airlines } from './api/api';\nimport Departure from './components/departure';\nimport Arrival from './components/arrival';\nimport SearchField from './components/searchField';\nimport DeparturesDetails from './components/DeparturesDetails';\nimport ArrivalsDetails from './components/ArrivalsDetails';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrival: [],\n      departure: [],\n      arrivalToShow: [],\n      departureToShow: [],\n      details: [],\n      arrivalToShowFromFilter: [],\n      departureToShowFromFilter: [],\n    };\n  }\n\n  componentDidMount() {\n    this.airlinesScadule();\n  }\n\n  airlinesScadule = async() => {\n    const scadule = await airlines();\n\n    // console.log(scadule);\n    this.setState({\n      arrival: this.setRightTime(scadule.body.arrival),\n      departure: this.setRightTime(scadule.body.departure),\n    });\n  }\n\n  setRightTime = (arr) => {\n    const arr2 = arr;\n    const arr1 = arr.map(item => new Date(item.timeToStand).toLocaleString());\n\n    for (let i = 0; i < arr.length; i++) {\n      arr2[i].timeToStand = arr1[i];\n    }\n\n    return arr2;\n  };\n\n  today = () => new Date().toLocaleDateString('uk-UA');\n\n  yesterday = () => new Date(new Date().setDate(new Date().getDate() - 1)).toLocaleDateString('uk-UA');\n\n  tomorrow = () => new Date(new Date().setDate(new Date().getDate() + 1)).toLocaleDateString('uk-UA');\n\n  activeDay = (day) => {\n    switch (day) {\n      case 'YESTERDAY':\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.yesterday()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.yesterday()),\n        }));\n        break;\n      case 'TODAY':\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n        }));\n        break;\n      case 'TOMORROW':\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.tomorrow()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.tomorrow()),\n        }));\n        break;\n      default:\n        this.setState(prevSate => ({\n          ...prevSate,\n          arrivalToShow: [...prevSate.arrival]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n          departureToShow: [...prevSate.departure]\n            .filter(item => new Date(item.timeToStand).toLocaleDateString('uk-UA') === this.today()),\n        }));\n    }\n  }\n\n  setItemForDetails = (item) => {\n    this.setState(prevState => ({\n      ...prevState,\n      details: item,\n    }));\n  };\n\n  filterForCities = (e) => {\n    this.setState(prevSate => ({\n      ...prevSate,\n      arrivalToShowFromFilter: [...prevSate.arrivalToShow]\n        .filter(item => item['airportFromID.city_en'].toLowerCase().includes(e.toLowerCase())),\n      departureToShowFromFilter: [...prevSate.departureToShow]\n        .filter(item => item['airportToID.city_en'].toLowerCase().includes(e.toLowerCase())),\n    }));\n  };\n\n  buttonFromFilter = () => {\n    this.setState(prevSate => ({\n      ...prevSate,\n      arrivalToShow: prevSate.arrivalToShowFromFilter,\n      departureToShow: prevSate.departureToShowFromFilter,\n    }));\n  }\n\n  render() {\n    const { departureToShow, arrivalToShow, details } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Switch>\n          {details.map(item => (\n            <Route path=\"/arrivalsDetails\" exact>\n              <ArrivalsDetails\n                logo={item.airline.en.logoName}\n                number={item.fltNo}\n                from={item['airportFromID.name_en']}\n                terminal={item.term}\n                planeNo={item.planeNo}\n                planeType={item['planeTypeID.name']}\n                arrivalTime={\n                  new Date(item.timeToStand).toLocaleTimeString('uk-UA')\n                }\n              />\n            </Route>\n          ))}\n          {details.map(item => (\n            <Route path=\"/departuresDetails\" exact>\n              <DeparturesDetails\n                logo={item.airline.en.logoName}\n                number={item.fltNo}\n                to={item['airportToID.name_en']}\n                terminal={item.term}\n                planeNo={item.planeNo}\n                planeType={item['planeTypeID.name']}\n                arrivalTime={\n                  new Date(item.timeToStand).toLocaleTimeString('uk-UA')\n                }\n              />\n            </Route>\n          ))}\n\n          <Route path=\"/\">\n            <SearchField\n              filterForCities={this.filterForCities}\n              buttonFromFilter={this.buttonFromFilter}\n            />\n\n            <div className=\"tableAndButtons\">\n              <div className=\"buttons\">\n                <NavLink\n                  to=\"/departures\"\n                  exact\n                  activeClassName=\"activeButton\"\n                  className=\"button aName\"\n                >\n                Departures\n                </NavLink>\n\n                <NavLink\n                  to=\"/arrivals\"\n                  exact\n                  activeClassName=\"activeButton\"\n                  className=\"button aName\"\n                >\n                Arrivals\n                </NavLink>\n              </div>\n\n              <Route\n                path=\"/arrivals/:day?\"\n                render={props => (\n                  <Arrival\n                    {...props}\n                    arrival={arrivalToShow}\n                    activeDay={this.activeDay}\n                    yesterday={this.yesterday}\n                    today={this.today}\n                    tomorrow={this.tomorrow}\n                    setItemForDetails={this.setItemForDetails}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/departures/:day?\"\n                render={props => (\n                  <Departure\n                    {...props}\n                    departure={departureToShow}\n                    activeDay={this.activeDay}\n                    yesterday={this.yesterday}\n                    today={this.today}\n                    tomorrow={this.tomorrow}\n                    setItemForDetails={this.setItemForDetails}\n                  />\n                )}\n              />\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}